#version: "3.8"

services:
  matchmaking_redis:
    image: redis:latest
    container_name: matchmaking_redis
    restart: always
    ports:
      - "6379:6379"
    command: ["redis-server", "--loglevel", "nothing"]

  matchmaking_server:
    build:
      context: ./matchmaking_service/
      dockerfile: Dockerfile
    container_name: matchmaking_server
    restart: always
    depends_on:
      - matchmaking_redis
    ports:
      - "8080:8080"
  
  game_server:
    build:
      context: ./game_server_service/
      dockerfile: Dockerfile
    container_name: game_server
    restart: always
    ports:
      - "8081:8081"
    cpuset: "0,1,2,3"
  
  platform_server:
    build:
      context: ./platform_service/
      dockerfile: Dockerfile
    container_name: platform_server
    restart: always
    ports:
      - "8082:8082"
    cpuset: "0,1,2,3"
    
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    depends_on:
      - matchmaking_server
      - game_server
      - postgres
    ports:
      - "9090:9090"
    command:
    - "--log.level=error"
    - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus_data:/prometheus
    cpuset: "0,1,2,3"
  
  blackbox_exporter:
    image: prom/blackbox-exporter
    container_name: blackbox_exporter
    restart: always
    depends_on:
      - prometheus
    ports:
      - "9115:9115"
    volumes:
      - "./blackbox.yml:/etc/blackbox_exporter/blackbox.yml"
    command:
      - "--log.level=error"
      - "--config.file=/etc/blackbox_exporter/blackbox.yml"
    cpuset: "0,1,2,3"

  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    environment:
    - GF_LOG_LEVEL=error
    volumes:
      - ./grafana_data:/var/lib/grafana
    cpuset: "0,1,2,3"

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: sawa
      POSTGRES_PASSWORD: sawa
      POSTGRES_DB: olympus
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./dbScripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    cpuset: "0,1,2,3"
      
volumes:
  prometheus_data:
  grafana_data:
  postgres_data: