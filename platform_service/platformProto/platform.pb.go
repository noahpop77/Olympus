// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.6
// source: platform.proto

package platformProto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MatchCreation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchID           string   `protobuf:"bytes,1,opt,name=matchID,proto3" json:"matchID,omitempty"`
	ParticipantsPUUID []string `protobuf:"bytes,2,rep,name=participantsPUUID,proto3" json:"participantsPUUID,omitempty"`
}

func (x *MatchCreation) Reset() {
	*x = MatchCreation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchCreation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchCreation) ProtoMessage() {}

func (x *MatchCreation) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchCreation.ProtoReflect.Descriptor instead.
func (*MatchCreation) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{0}
}

func (x *MatchCreation) GetMatchID() string {
	if x != nil {
		return x.MatchID
	}
	return ""
}

func (x *MatchCreation) GetParticipantsPUUID() []string {
	if x != nil {
		return x.ParticipantsPUUID
	}
	return nil
}

type MatchConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchID          string `protobuf:"bytes,1,opt,name=matchID,proto3" json:"matchID,omitempty"`
	ParticipantPUUID string `protobuf:"bytes,2,opt,name=participantPUUID,proto3" json:"participantPUUID,omitempty"`
	RiotName         string `protobuf:"bytes,3,opt,name=riotName,proto3" json:"riotName,omitempty"`
	RiotTag          string `protobuf:"bytes,4,opt,name=riotTag,proto3" json:"riotTag,omitempty"`
	Rank             string `protobuf:"bytes,5,opt,name=rank,proto3" json:"rank,omitempty"`
	Role             string `protobuf:"bytes,6,opt,name=role,proto3" json:"role,omitempty"`
	PartyId          string `protobuf:"bytes,7,opt,name=partyId,proto3" json:"partyId,omitempty"`
	QueueType        string `protobuf:"bytes,8,opt,name=queueType,proto3" json:"queueType,omitempty"`
}

func (x *MatchConnection) Reset() {
	*x = MatchConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchConnection) ProtoMessage() {}

func (x *MatchConnection) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchConnection.ProtoReflect.Descriptor instead.
func (*MatchConnection) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{1}
}

func (x *MatchConnection) GetMatchID() string {
	if x != nil {
		return x.MatchID
	}
	return ""
}

func (x *MatchConnection) GetParticipantPUUID() string {
	if x != nil {
		return x.ParticipantPUUID
	}
	return ""
}

func (x *MatchConnection) GetRiotName() string {
	if x != nil {
		return x.RiotName
	}
	return ""
}

func (x *MatchConnection) GetRiotTag() string {
	if x != nil {
		return x.RiotTag
	}
	return ""
}

func (x *MatchConnection) GetRank() string {
	if x != nil {
		return x.Rank
	}
	return ""
}

func (x *MatchConnection) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *MatchConnection) GetPartyId() string {
	if x != nil {
		return x.PartyId
	}
	return ""
}

func (x *MatchConnection) GetQueueType() string {
	if x != nil {
		return x.QueueType
	}
	return ""
}

type MatchResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchID       string         `protobuf:"bytes,1,opt,name=matchID,proto3" json:"matchID,omitempty"`
	GameVersion   string         `protobuf:"bytes,2,opt,name=gameVersion,proto3" json:"gameVersion,omitempty"`
	GameDuration  string         `protobuf:"bytes,3,opt,name=gameDuration,proto3" json:"gameDuration,omitempty"`
	GameStartTime string         `protobuf:"bytes,4,opt,name=gameStartTime,proto3" json:"gameStartTime,omitempty"`
	GameEndTime   string         `protobuf:"bytes,5,opt,name=gameEndTime,proto3" json:"gameEndTime,omitempty"`
	TeamOnePUUID  []string       `protobuf:"bytes,6,rep,name=teamOnePUUID,proto3" json:"teamOnePUUID,omitempty"`
	TeamTwoPUUID  []string       `protobuf:"bytes,7,rep,name=teamTwoPUUID,proto3" json:"teamTwoPUUID,omitempty"`
	Participants  []*Participant `protobuf:"bytes,8,rep,name=participants,proto3" json:"participants,omitempty"`
	Winners       string         `protobuf:"bytes,9,opt,name=winners,proto3" json:"winners,omitempty"`
}

func (x *MatchResult) Reset() {
	*x = MatchResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchResult) ProtoMessage() {}

func (x *MatchResult) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchResult.ProtoReflect.Descriptor instead.
func (*MatchResult) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{2}
}

func (x *MatchResult) GetMatchID() string {
	if x != nil {
		return x.MatchID
	}
	return ""
}

func (x *MatchResult) GetGameVersion() string {
	if x != nil {
		return x.GameVersion
	}
	return ""
}

func (x *MatchResult) GetGameDuration() string {
	if x != nil {
		return x.GameDuration
	}
	return ""
}

func (x *MatchResult) GetGameStartTime() string {
	if x != nil {
		return x.GameStartTime
	}
	return ""
}

func (x *MatchResult) GetGameEndTime() string {
	if x != nil {
		return x.GameEndTime
	}
	return ""
}

func (x *MatchResult) GetTeamOnePUUID() []string {
	if x != nil {
		return x.TeamOnePUUID
	}
	return nil
}

func (x *MatchResult) GetTeamTwoPUUID() []string {
	if x != nil {
		return x.TeamTwoPUUID
	}
	return nil
}

func (x *MatchResult) GetParticipants() []*Participant {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *MatchResult) GetWinners() string {
	if x != nil {
		return x.Winners
	}
	return ""
}

type ParticipantList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Participants []*Participant `protobuf:"bytes,8,rep,name=participants,proto3" json:"participants,omitempty"`
}

func (x *ParticipantList) Reset() {
	*x = ParticipantList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipantList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantList) ProtoMessage() {}

func (x *ParticipantList) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantList.ProtoReflect.Descriptor instead.
func (*ParticipantList) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{3}
}

func (x *ParticipantList) GetParticipants() []*Participant {
	if x != nil {
		return x.Participants
	}
	return nil
}

type Perk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Perk string `protobuf:"bytes,1,opt,name=perk,proto3" json:"perk,omitempty"`
}

func (x *Perk) Reset() {
	*x = Perk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Perk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Perk) ProtoMessage() {}

func (x *Perk) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Perk.ProtoReflect.Descriptor instead.
func (*Perk) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{4}
}

func (x *Perk) GetPerk() string {
	if x != nil {
		return x.Perk
	}
	return ""
}

type Selection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Perk string `protobuf:"bytes,1,opt,name=perk,proto3" json:"perk,omitempty"`
}

func (x *Selection) Reset() {
	*x = Selection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Selection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Selection) ProtoMessage() {}

func (x *Selection) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Selection.ProtoReflect.Descriptor instead.
func (*Selection) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{5}
}

func (x *Selection) GetPerk() string {
	if x != nil {
		return x.Perk
	}
	return ""
}

type Styles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selections []*Selection `protobuf:"bytes,1,rep,name=selections,proto3" json:"selections,omitempty"`
	Style      string       `protobuf:"bytes,2,opt,name=style,proto3" json:"style,omitempty"`
}

func (x *Styles) Reset() {
	*x = Styles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Styles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Styles) ProtoMessage() {}

func (x *Styles) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Styles.ProtoReflect.Descriptor instead.
func (*Styles) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{6}
}

func (x *Styles) GetSelections() []*Selection {
	if x != nil {
		return x.Selections
	}
	return nil
}

func (x *Styles) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

type Perks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Styles []*Styles `protobuf:"bytes,1,rep,name=styles,proto3" json:"styles,omitempty"`
}

func (x *Perks) Reset() {
	*x = Perks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Perks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Perks) ProtoMessage() {}

func (x *Perks) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Perks.ProtoReflect.Descriptor instead.
func (*Perks) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{7}
}

func (x *Perks) GetStyles() []*Styles {
	if x != nil {
		return x.Styles
	}
	return nil
}

type Participant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assists                       int32  `protobuf:"varint,1,opt,name=assists,proto3" json:"assists,omitempty"`
	ChampExperience               int32  `protobuf:"varint,2,opt,name=champExperience,proto3" json:"champExperience,omitempty"`
	ChampLevel                    int32  `protobuf:"varint,3,opt,name=champLevel,proto3" json:"champLevel,omitempty"`
	ChampId                       int32  `protobuf:"varint,4,opt,name=champId,proto3" json:"champId,omitempty"`
	ChampName                     string `protobuf:"bytes,5,opt,name=champName,proto3" json:"champName,omitempty"`
	Deaths                        int32  `protobuf:"varint,6,opt,name=deaths,proto3" json:"deaths,omitempty"`
	GoldEarned                    int32  `protobuf:"varint,7,opt,name=goldEarned,proto3" json:"goldEarned,omitempty"`
	Item0                         string `protobuf:"bytes,8,opt,name=item0,proto3" json:"item0,omitempty"`
	Item1                         string `protobuf:"bytes,9,opt,name=item1,proto3" json:"item1,omitempty"`
	Item2                         string `protobuf:"bytes,10,opt,name=item2,proto3" json:"item2,omitempty"`
	Item3                         string `protobuf:"bytes,11,opt,name=item3,proto3" json:"item3,omitempty"`
	Item4                         string `protobuf:"bytes,12,opt,name=item4,proto3" json:"item4,omitempty"`
	Item5                         string `protobuf:"bytes,13,opt,name=item5,proto3" json:"item5,omitempty"`
	Item6                         string `protobuf:"bytes,14,opt,name=item6,proto3" json:"item6,omitempty"`
	Kills                         int32  `protobuf:"varint,15,opt,name=kills,proto3" json:"kills,omitempty"`
	NeutralMinionsKilled          int32  `protobuf:"varint,16,opt,name=neutralMinionsKilled,proto3" json:"neutralMinionsKilled,omitempty"`
	Perks                         *Perks `protobuf:"bytes,17,opt,name=perks,proto3" json:"perks,omitempty"`
	RiotName                      string `protobuf:"bytes,18,opt,name=riotName,proto3" json:"riotName,omitempty"`
	RiotTag                       string `protobuf:"bytes,19,opt,name=riotTag,proto3" json:"riotTag,omitempty"`
	Summoner1                     string `protobuf:"bytes,20,opt,name=summoner1,proto3" json:"summoner1,omitempty"`
	Summoner2                     string `protobuf:"bytes,21,opt,name=summoner2,proto3" json:"summoner2,omitempty"`
	SummonerName                  string `protobuf:"bytes,22,opt,name=summonerName,proto3" json:"summonerName,omitempty"`
	TeamId                        int32  `protobuf:"varint,23,opt,name=teamId,proto3" json:"teamId,omitempty"`
	TotalAllyJungleMinionsKilled  int32  `protobuf:"varint,24,opt,name=totalAllyJungleMinionsKilled,proto3" json:"totalAllyJungleMinionsKilled,omitempty"`
	TotalDamageDealtToChampions   int32  `protobuf:"varint,25,opt,name=totalDamageDealtToChampions,proto3" json:"totalDamageDealtToChampions,omitempty"`
	TotalEnemyJungleMinionsKilled int32  `protobuf:"varint,26,opt,name=totalEnemyJungleMinionsKilled,proto3" json:"totalEnemyJungleMinionsKilled,omitempty"`
	TotalMinionsKilled            int32  `protobuf:"varint,27,opt,name=totalMinionsKilled,proto3" json:"totalMinionsKilled,omitempty"`
	VisionScore                   int32  `protobuf:"varint,28,opt,name=visionScore,proto3" json:"visionScore,omitempty"`
	Win                           bool   `protobuf:"varint,29,opt,name=win,proto3" json:"win,omitempty"`
}

func (x *Participant) Reset() {
	*x = Participant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Participant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Participant) ProtoMessage() {}

func (x *Participant) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Participant.ProtoReflect.Descriptor instead.
func (*Participant) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{8}
}

func (x *Participant) GetAssists() int32 {
	if x != nil {
		return x.Assists
	}
	return 0
}

func (x *Participant) GetChampExperience() int32 {
	if x != nil {
		return x.ChampExperience
	}
	return 0
}

func (x *Participant) GetChampLevel() int32 {
	if x != nil {
		return x.ChampLevel
	}
	return 0
}

func (x *Participant) GetChampId() int32 {
	if x != nil {
		return x.ChampId
	}
	return 0
}

func (x *Participant) GetChampName() string {
	if x != nil {
		return x.ChampName
	}
	return ""
}

func (x *Participant) GetDeaths() int32 {
	if x != nil {
		return x.Deaths
	}
	return 0
}

func (x *Participant) GetGoldEarned() int32 {
	if x != nil {
		return x.GoldEarned
	}
	return 0
}

func (x *Participant) GetItem0() string {
	if x != nil {
		return x.Item0
	}
	return ""
}

func (x *Participant) GetItem1() string {
	if x != nil {
		return x.Item1
	}
	return ""
}

func (x *Participant) GetItem2() string {
	if x != nil {
		return x.Item2
	}
	return ""
}

func (x *Participant) GetItem3() string {
	if x != nil {
		return x.Item3
	}
	return ""
}

func (x *Participant) GetItem4() string {
	if x != nil {
		return x.Item4
	}
	return ""
}

func (x *Participant) GetItem5() string {
	if x != nil {
		return x.Item5
	}
	return ""
}

func (x *Participant) GetItem6() string {
	if x != nil {
		return x.Item6
	}
	return ""
}

func (x *Participant) GetKills() int32 {
	if x != nil {
		return x.Kills
	}
	return 0
}

func (x *Participant) GetNeutralMinionsKilled() int32 {
	if x != nil {
		return x.NeutralMinionsKilled
	}
	return 0
}

func (x *Participant) GetPerks() *Perks {
	if x != nil {
		return x.Perks
	}
	return nil
}

func (x *Participant) GetRiotName() string {
	if x != nil {
		return x.RiotName
	}
	return ""
}

func (x *Participant) GetRiotTag() string {
	if x != nil {
		return x.RiotTag
	}
	return ""
}

func (x *Participant) GetSummoner1() string {
	if x != nil {
		return x.Summoner1
	}
	return ""
}

func (x *Participant) GetSummoner2() string {
	if x != nil {
		return x.Summoner2
	}
	return ""
}

func (x *Participant) GetSummonerName() string {
	if x != nil {
		return x.SummonerName
	}
	return ""
}

func (x *Participant) GetTeamId() int32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *Participant) GetTotalAllyJungleMinionsKilled() int32 {
	if x != nil {
		return x.TotalAllyJungleMinionsKilled
	}
	return 0
}

func (x *Participant) GetTotalDamageDealtToChampions() int32 {
	if x != nil {
		return x.TotalDamageDealtToChampions
	}
	return 0
}

func (x *Participant) GetTotalEnemyJungleMinionsKilled() int32 {
	if x != nil {
		return x.TotalEnemyJungleMinionsKilled
	}
	return 0
}

func (x *Participant) GetTotalMinionsKilled() int32 {
	if x != nil {
		return x.TotalMinionsKilled
	}
	return 0
}

func (x *Participant) GetVisionScore() int32 {
	if x != nil {
		return x.VisionScore
	}
	return 0
}

func (x *Participant) GetWin() bool {
	if x != nil {
		return x.Win
	}
	return false
}

type MatchHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerPUUID string         `protobuf:"bytes,1,opt,name=playerPUUID,proto3" json:"playerPUUID,omitempty"`
	Matches     []*MatchResult `protobuf:"bytes,2,rep,name=matches,proto3" json:"matches,omitempty"`
}

func (x *MatchHistory) Reset() {
	*x = MatchHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchHistory) ProtoMessage() {}

func (x *MatchHistory) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchHistory.ProtoReflect.Descriptor instead.
func (*MatchHistory) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{9}
}

func (x *MatchHistory) GetPlayerPUUID() string {
	if x != nil {
		return x.PlayerPUUID
	}
	return ""
}

func (x *MatchHistory) GetMatches() []*MatchResult {
	if x != nil {
		return x.Matches
	}
	return nil
}

type UserProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Puuid    string `protobuf:"bytes,1,opt,name=puuid,proto3" json:"puuid,omitempty"`
	RiotName string `protobuf:"bytes,2,opt,name=riotName,proto3" json:"riotName,omitempty"`
	RiotTag  string `protobuf:"bytes,3,opt,name=riotTag,proto3" json:"riotTag,omitempty"`
	Rank     int32  `protobuf:"varint,4,opt,name=rank,proto3" json:"rank,omitempty"`
	Wins     int32  `protobuf:"varint,5,opt,name=wins,proto3" json:"wins,omitempty"`
	Losses   int32  `protobuf:"varint,6,opt,name=losses,proto3" json:"losses,omitempty"`
}

func (x *UserProfile) Reset() {
	*x = UserProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platform_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfile) ProtoMessage() {}

func (x *UserProfile) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfile.ProtoReflect.Descriptor instead.
func (*UserProfile) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{10}
}

func (x *UserProfile) GetPuuid() string {
	if x != nil {
		return x.Puuid
	}
	return ""
}

func (x *UserProfile) GetRiotName() string {
	if x != nil {
		return x.RiotName
	}
	return ""
}

func (x *UserProfile) GetRiotTag() string {
	if x != nil {
		return x.RiotTag
	}
	return ""
}

func (x *UserProfile) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *UserProfile) GetWins() int32 {
	if x != nil {
		return x.Wins
	}
	return 0
}

func (x *UserProfile) GetLosses() int32 {
	if x != nil {
		return x.Losses
	}
	return 0
}

var File_platform_proto protoreflect.FileDescriptor

var file_platform_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x57, 0x0a, 0x0d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x50, 0x55, 0x55, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x73, 0x50, 0x55, 0x55, 0x49, 0x44, 0x22, 0xed, 0x01, 0x0a, 0x0f, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x50, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x50, 0x55, 0x55,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x69, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x69, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x69, 0x6f, 0x74, 0x54, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x69, 0x6f, 0x74, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xd7, 0x02, 0x0a, 0x0b, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x67, 0x61, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x6e, 0x65, 0x50, 0x55, 0x55, 0x49, 0x44,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x6e, 0x65, 0x50,
	0x55, 0x55, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x61, 0x6d, 0x54, 0x77, 0x6f, 0x50,
	0x55, 0x55, 0x49, 0x44, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x61, 0x6d,
	0x54, 0x77, 0x6f, 0x50, 0x55, 0x55, 0x49, 0x44, 0x12, 0x3e, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x69, 0x6e, 0x6e, 0x65,
	0x72, 0x73, 0x22, 0x51, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x73, 0x22, 0x1a, 0x0a, 0x04, 0x50, 0x65, 0x72, 0x6b, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x65, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x65, 0x72,
	0x6b, 0x22, 0x1f, 0x0a, 0x09, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x65, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x65,
	0x72, 0x6b, 0x22, 0x58, 0x0a, 0x06, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0a,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x22, 0x36, 0x0a, 0x05,
	0x50, 0x65, 0x72, 0x6b, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x73, 0x22, 0xcf, 0x07, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x45, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6d,
	0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x68,
	0x61, 0x6d, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6d,
	0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6d, 0x70,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x61, 0x74, 0x68, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x64, 0x65, 0x61, 0x74, 0x68, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x6f, 0x6c, 0x64,
	0x45, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x6f,
	0x6c, 0x64, 0x45, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x30, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x30, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x31, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x32, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x33, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x33,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x34, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x34, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x35, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x35, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x36, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x36, 0x12, 0x14, 0x0a, 0x05, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x6e, 0x65, 0x75, 0x74,
	0x72, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x69, 0x6c, 0x6c, 0x65, 0x64,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x4d,
	0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x05,
	0x70, 0x65, 0x72, 0x6b, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x6b,
	0x73, 0x52, 0x05, 0x70, 0x65, 0x72, 0x6b, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x69, 0x6f, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x69, 0x6f, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x69, 0x6f, 0x74, 0x54, 0x61, 0x67, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x69, 0x6f, 0x74, 0x54, 0x61, 0x67, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x31, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x31, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x32, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x32, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75,
	0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x1c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41,
	0x6c, 0x6c, 0x79, 0x4a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x73,
	0x4b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x41, 0x6c, 0x6c, 0x79, 0x4a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x69, 0x6e,
	0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x1b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x74, 0x54, 0x6f,
	0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x1b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x61, 0x6c,
	0x74, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x44, 0x0a, 0x1d,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x6e, 0x65, 0x6d, 0x79, 0x4a, 0x75, 0x6e, 0x67, 0x6c, 0x65,
	0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x1d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x6e, 0x65, 0x6d, 0x79, 0x4a,
	0x75, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x69, 0x6c, 0x6c,
	0x65, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x6f,
	0x6e, 0x73, 0x4b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x73, 0x4b, 0x69, 0x6c, 0x6c,
	0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x69, 0x6e, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x03, 0x77, 0x69, 0x6e, 0x22, 0x66, 0x0a, 0x0c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x50, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x50, 0x55, 0x55, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x22, 0x99,
	0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x69, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x69, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x69, 0x6f, 0x74, 0x54, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x69, 0x6f, 0x74, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x77, 0x69,
	0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6c, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2f,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_platform_proto_rawDescOnce sync.Once
	file_platform_proto_rawDescData = file_platform_proto_rawDesc
)

func file_platform_proto_rawDescGZIP() []byte {
	file_platform_proto_rawDescOnce.Do(func() {
		file_platform_proto_rawDescData = protoimpl.X.CompressGZIP(file_platform_proto_rawDescData)
	})
	return file_platform_proto_rawDescData
}

var file_platform_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_platform_proto_goTypes = []interface{}{
	(*MatchCreation)(nil),   // 0: platformProto.MatchCreation
	(*MatchConnection)(nil), // 1: platformProto.MatchConnection
	(*MatchResult)(nil),     // 2: platformProto.MatchResult
	(*ParticipantList)(nil), // 3: platformProto.ParticipantList
	(*Perk)(nil),            // 4: platformProto.Perk
	(*Selection)(nil),       // 5: platformProto.Selection
	(*Styles)(nil),          // 6: platformProto.Styles
	(*Perks)(nil),           // 7: platformProto.Perks
	(*Participant)(nil),     // 8: platformProto.Participant
	(*MatchHistory)(nil),    // 9: platformProto.MatchHistory
	(*UserProfile)(nil),     // 10: platformProto.UserProfile
}
var file_platform_proto_depIdxs = []int32{
	8, // 0: platformProto.MatchResult.participants:type_name -> platformProto.Participant
	8, // 1: platformProto.ParticipantList.participants:type_name -> platformProto.Participant
	5, // 2: platformProto.Styles.selections:type_name -> platformProto.Selection
	6, // 3: platformProto.Perks.styles:type_name -> platformProto.Styles
	7, // 4: platformProto.Participant.perks:type_name -> platformProto.Perks
	2, // 5: platformProto.MatchHistory.matches:type_name -> platformProto.MatchResult
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_platform_proto_init() }
func file_platform_proto_init() {
	if File_platform_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_platform_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchCreation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParticipantList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Perk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Selection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Styles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Perks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Participant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platform_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_platform_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_platform_proto_goTypes,
		DependencyIndexes: file_platform_proto_depIdxs,
		MessageInfos:      file_platform_proto_msgTypes,
	}.Build()
	File_platform_proto = out.File
	file_platform_proto_rawDesc = nil
	file_platform_proto_goTypes = nil
	file_platform_proto_depIdxs = nil
}
